---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-well-known-server
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: ca-well-known-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-well-known-server
  template:
    metadata:
      labels:
        app: ca-well-known-server
      annotations:
        checksum/config-ca: {{ (printf "%s:%s" (.Files.Get ".secret/tls.crt") (.Files.Get ".secret/tls.key")) | sha256sum }}
        checksum/config-files: {{ (printf "%s:%s:%s" (.Files.Get "files/ca-install-trust.sh") (.Files.Get "files/default.conf") .Values.cluster.hostname ) | sha256sum }}
    spec:
      containers:
        - name: nginx
          image: library/nginx:1-alpine
          ports:
            - name: nginx
              containerPort: 80
          livenessProbe:
            tcpSocket:
              port: nginx
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: nginx
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 120m
              memory: 120Mi
          volumeMounts:
            - mountPath: /usr/share/nginx/html/
              name: html
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx
              subPath: default.conf
      volumes:
        - name: nginx
          configMap:
            name: ca-well-known-files
        - name: html
          projected:
            sources:
              - configMap:
                  name: ca-well-known-files
                  items:
                    - key: ca-install-trust.sh
                      path: ca-install-trust.sh
              - configMap:
                  name: ca-well-known-files
                  items:
                    - key: ca-trust.txt
                      path: ca-trust.txt
              - secret:
                  name: selfsigned-ca-secret
                  items:
                    - key: tls.crt
                      path: ca.pem
---
apiVersion: v1
kind: Service
metadata:
  name: ca-well-known-server
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    app: ca-well-known-server
  ports:
    - name: nginx
      protocol: TCP
      port: 80
      targetPort: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ca-well-known-ingress
  namespace: "{{ .Release.Namespace }}"
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-ca-issuer
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
    - secretName: ca-well-known-server-tls
      hosts:
        - "{{ .Values.cluster.hostname }}"
  rules:
    - host: "{{ .Values.cluster.hostname }}"
      http:
        paths:
          - path: /.well-known/pki-validation/(ca-install-trust\.sh|ca-trust\.txt|ca.pem)$
            pathType: ImplementationSpecific
            backend:
              service:
                name: ca-well-known-server
                port:
                  name: nginx
